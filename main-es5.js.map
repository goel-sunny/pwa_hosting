{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/service/fake-req.service.ts","./src/app/service/pwa-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<button *ngIf=\\\"pwa.promptEvent\\\" (click)=\\\"installPwa()\\\">\\n    Install\\n  </button>\\n<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n\\n  <h1>Welcome to {{ title }}</h1>\\n\\n  <button  (click)=\\\"triggerClick()\\\" class=\\\"click-me\\\"> Click</button>\\n\\n  <button  (click)=\\\"setClickCount()\\\" class=\\\"click-count\\\">Click Count</button>\\n\\n  <button  (click)=\\\"setErrorCode()\\\" class=\\\"http-error\\\">Http Error</button>\\n\\n<router-outlet></router-outlet>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { FakeReqService } from './service/fake-req.service';\nimport { PwaService } from './service/pwa-service.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Fleet Management System';\n  \n    constructor(private fs: FakeReqService , private pwa: PwaService){\n    }\n\n   setErrorCode(){\n    this.fs.getRequest().subscribe(\n      (response) => {},\n      (error) => {\n         // here we are pushing the event and some error code variable \n        (<any>window).dataLayer.push({'event': \"APIFail\",\"errorCode\":error.status} );  \n       }\n     );\n    }\n\n\n    triggerClick(){\n       // whatever functionality it have . \n    }\n\n    setClickCount(){\n      let dataLayer = (<any>window).dataLayer; \n       let counter =0 , flag = false ;\n      dataLayer.forEach(element => {\n        if(element.hasOwnProperty('counter')){\n           counter =  element.counter; \n        }\n     });\n     \n     counter++;\n    // here we are pushing the event and some error code variable \n   (<any>window).dataLayer.push({'event': \"ClickCounter\",\"counter\":counter });    \n  }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FakeReqService } from './service/fake-req.service';\n\n import { HttpClientModule } from '@angular/common/http';\n import { HttpClient } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment'; \nimport { PwaService } from './service/pwa-service.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [\n    FakeReqService, \n    HttpClient,\n    PwaService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {map, catchError} from 'rxjs/operators';\n\nexport class FakeReqService {\n\n  constructor(private http: HttpClient) { \n  }\n  \n  getRequest(): Observable<any>{  \n   return  this.http.get('http://www.mocky.io/v2/5d5f8c9d2f000050005f371e');\n  \n  } \n}\n","import { Injectable } from '@angular/core';\n@Injectable()\nexport class PwaService {\n  public promptEvent: any;\n  constructor() {\n    window.addEventListener('beforeinstallprompt', event => {\n      this.promptEvent = event;\n    \n    });\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n// platformBrowserDynamic().bootstrapModule(AppModule)\n//   .catch(err => console.error(err));\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(() => {\n  if ('serviceWorker' in navigator && environment.production) {\n    navigator.serviceWorker.register('/ngsw-worker.js');\n  }\n}).catch(err => console.log(err));"],"sourceRoot":"webpack:///"}